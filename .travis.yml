stages:
  - test
  - build
  - integration

sudo: required

env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - KUBECONFIG=$HOME/.kube/config
before_install:
  - sudo apt-get -qq -y install conntrack

jobs:
  include:
    - stage: test
      language: go
      go: "1.16"
      script:
        - make install-kubebuilder KUBEBUILDER_INSTALL_DIR=/tmp/kubebuilder
        - export TEST_ASSET_KUBECTL=/tmp/kubebuilder/bin/kubectl
        - export TEST_ASSET_KUBE_APISERVER=/tmp/kubebuilder/bin/kube-apiserver
        - export TEST_ASSET_ETCD=/tmp/kubebuilder/bin/etcd
        - make test

    - stage: build
      if: type == pull_request
      branches:
        except:
          - master
      language: bash
      sudo: required
      script:
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker build -t shipasoftware/ketch:$TRAVIS_COMMIT .
        - docker push shipasoftware/ketch:$TRAVIS_COMMIT

    - stage: integration
      sudo: required
      dist: xenial
      language: go
      go: 1.16.x
      before_install: ./scripts/install_script.sh $TRAVIS_COMMIT
      script:
        - kubectl cluster-info
        - make install
        - make ketch
        # cert-manager
        - kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.3.1/cert-manager.yaml
        # istio
        - curl -Ls https://istio.io/downloadIstio | ISTIO_VERSION=1.9.0 sh -
        - export PATH=$PWD/istio-1.9.0/bin:$PATH
        - istioctl install --set profile=demo -y
        # wait for containers
        - kubectl wait --for=condition=Ready=true pod -n cert-manager --all
        - kubectl wait --for=condition=Ready=true pod -n istio-system --all
        - kubectl get pods -A
        # deploy
        - make deploy IMG=shipasoftware/ketch:$TRAVIS_COMMIT
        # test - TODO - create integration test pkg with real coverage and assertions
        - ./bin/ketch --version
        - ./bin/ketch pool add mypool
        - ./bin/ketch pool list
        - ./bin/ketch pool remove mypool
